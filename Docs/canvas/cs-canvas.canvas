{
	"nodes":[
		{"id":"cb2d4d6d4d34ebc0","type":"text","text":"[big_o_notation](big_o_notation.md) ","x":-183,"y":-120,"width":183,"height":60},
		{"id":"bfe7490e4e82751e","type":"text","text":"# Language","x":0,"y":-410,"width":190,"height":60},
		{"id":"e3cd6f396f2cd091","type":"text","text":"C","x":-277,"y":-340,"width":110,"height":60},
		{"id":"6119eaee192cfd61","type":"text","text":"[Python](GAB/Estudos-Trabalhos/PROGRAMAÇÃO/programming-studies/Languages/PYTHON/README.md) `RM`","x":-277,"y":-255,"width":150,"height":50},
		{"id":"aa29e2c3936686b9","type":"text","text":"cache_algo\n\nare used to manage the cache memory of a computer. Cache memory is a small amount of memory that is used to store data that is frequently accessed. This allows the computer to access the data faster than if it had to go to the main memory. Cache algorithms are used to determine which data should be stored in the cache memory and which data should be removed from the cache memory.\n\nVisit the following resources to learn more:\n\n- [Cache Replacement Algorithms: How To Efficiently Manage The Cache Storage](https://dev.to/satrobit/cache-replacement-algorithms-how-to-efficiently-manage-the-cache-storage-2ne1)\n- [14. Caching and Cache-Efficient Algorithms](https://www.youtube.com/watch?v=xDKnMXtZKq8)","x":570,"y":370,"width":430,"height":160},
		{"id":"27cbd4fd37c229c6","type":"text","text":"seaching_algo\n\nSearch algorithms are used to find a specific item in a collection of items. For example, if you have a list of names and you want to find a specific name, you can use a search algorithm to find that name.\n\nVisit the following resources to learn more:\n\n- [Searching Algorithms](https://www.geeksforgeeks.org/searching-algorithms/)\n- [Search Algorithms – Linear Search and Binary Search](https://www.freecodecamp.org/news/search-algorithms-linear-and-binary-search-explained/)","x":606,"y":197,"width":476,"height":146},
		{"id":"3377e4ce3c33e583","type":"text","text":"tree_algo\n\nHere is the list of common tree algorithms:\n\n- Tree Traversal:\n    - Pre-Order Traversal\n    - In-Order Traversal\n    - Post-Order Traversal\n- Breadth First Search\n- Depth First Search\n\n\n\n","x":880,"y":-20,"width":258,"height":260},
		{"id":"cd6268d45fca94a3","type":"text","text":"[recursion](recursion.md) ","x":606,"y":-20,"width":134,"height":60},
		{"id":"256fdfd7a659e1e9","type":"text","text":"[sorting_algo](sorting_algo.md) ","x":640,"y":60,"width":157,"height":64},
		{"id":"716b5b81fc549031","type":"text","text":"# Asymptotic Notation","x":80,"y":-120,"width":220,"height":100},
		{"id":"b8c7c8c19974227b","type":"text","text":"# Data Structures","x":91,"y":-265,"width":199,"height":120},
		{"id":"0b8b4b096b0084b5","type":"text","text":"# String Search and Manipulations\n\nIt is used in many different applications, such as searching or replacing a specific pattern, word or character in a string.\n\nVisit the following resources to learn more:\n\n- [String-searching algorithm](https://en.wikipedia.org/wiki/String-searching_algorithm)\n- [Pattern Searching](https://www.geeksforgeeks.org/algorithms-gq/pattern-searching/)\n- [Applications of String Matching Algorithms](https://www.geeksforgeeks.org/applications-of-string-matching-algorithms/)\n","x":-349,"y":10,"width":349,"height":290},
		{"id":"4e2c6f1a74d7e863","type":"text","text":"#to_translate\n\nprimeiro eu vou \"estruturar\" os nodes e em cada um vai ter um arquivo listando as sub informações, para depois distribuir em arquivos de tópicos mais específicos\n`RM` = Roadmap\n","x":-695,"y":-290,"width":250,"height":340,"color":"2"},
		{"id":"1adc1d59f291b5af","type":"text","text":"# Floating Point Numbers\n\nFloating point numbers are numbers that have a decimal point in them. They are used to represent real numbers. For example, 3.14 is a floating point number. 3 is not a floating point number because it does not have a decimal point in it.\n\nVisit the following resources to learn more:\n\n- [Representation of Floating Point Numbers - 1](https://www.youtube.com/watch?v=ji3SfClm8TU)\n- [Why 0.1 + 0.2 != 0.3? | Floating Point Math](https://www.youtube.com/watch?v=RIiq4tTt6rI)","x":-236,"y":530,"width":339,"height":360},
		{"id":"11f354500e5d9a51","type":"text","text":"# Bitwise Operators\n\nBitwise operators are used to perform operations on individual bits of a number. They are used in cryptography, image processing, and other applications.\n\nVisit the following resources to learn more:\n\n- [Bit Manipulation](https://www.youtube.com/watch?v=7jkIUgLC29I)\n- [Binary: Plusses & Minuses (Why We Use Twos Complement) - Computerphile](https://www.youtube.com/watch?v=lKTsv6iVxV4)\n- [Algorithms: Bit Manipulation](https://www.youtube.com/watch?v=NLKQEOgBAnw)","x":-681,"y":500,"width":365,"height":280},
		{"id":"94fac9c144763812","type":"text","text":"# Endianess\n\nEndianess is the order in which bytes are stored in memory. The two most common types of endianess are big endian and little endian. Big endian stores the most significant byte first, while little endian stores the least significant byte first.\n\nVisit the following resources to learn more:\n\n- [What is Endianness? Big-Endian vs Little-Endian Explained with Examples](https://www.freecodecamp.org/news/what-is-endianness-big-endian-vs-little-endian/)\n- [Big Endian vs Little Endian.mp4](https://www.youtube.com/watch?v=JrNF0KRAlyo)\n- [Endianness Explained With an Egg - Computerphile](https://www.youtube.com/watch?v=NcaiHcBvDR4)","x":208,"y":610,"width":346,"height":340},
		{"id":"55fcdf246031175d","type":"text","text":"# Character Encodings\n\nCharacter encodings are a way of representing characters as numbers. They are used to store and transmit text. The most common character encoding is ASCII, which is a 7-bit encoding. This means that each character is represented by a number between 0 and 127. The ASCII character set contains 128 characters, including letters, numbers, punctuation, and control characters. The ASCII character set is a subset of the Unicode character set, which is a 16-bit encoding. Unicode is a superset of ASCII, so ASCII characters can be represented by Unicode. Unicode is the most common character encoding used on the web.\n\nVisit the following resources to learn more:\n\n- [Must Know about Character Encodings](https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/)\n- [Character Encoding](https://cs.lmu.edu/~ray/notes/charenc/)","x":639,"y":640,"width":580,"height":380},
		{"id":"23065f2d862b132e","type":"text","text":"# Design Patterns\n\nDesign patterns are solutions to common problems in software design. They are formalized best practices that the programmer can use to solve common problems when designing an application or system.\n\nVisit the following resources to learn more:\n\n- [Design Patterns - Wikipedia](https://en.wikipedia.org/wiki/Software_design_pattern)\n- [Design Patterns for Humans](https://github.com/kamranahmedse/design-patterns-for-humans)","x":437,"y":1163,"width":360,"height":300},
		{"id":"dcdc304de506ab12","type":"text","text":"Dependency Injection","x":79,"y":1219,"width":228,"height":60},
		{"id":"ceabea702b676fe5","type":"text","text":"Null Object","x":158,"y":1304,"width":149,"height":60},
		{"id":"fec47e33407a9b37","type":"text","text":"Type Object","x":153,"y":1390,"width":154,"height":60},
		{"id":"f245673e86be8b48","type":"text","text":"# Complexity Classes\n\nIn computer science, there exist some problems whose solutions are not yet found, the problems are divided into classes known as Complexity Classes. In complexity theory, a Complexity Class is a set of problems with related complexity. These classes help scientists to groups problems based on how much time and space they require to solve problems and verify the solutions. It is the branch of the theory of computation that deals with the resources required to solve a problem.\n\nVisit the following resources to learn more:\n\n- [Types of Complexity Classes | P, NP, CoNP, NP hard and NP complete](https://www.geeksforgeeks.org/types-of-complexity-classes-p-np-conp-np-hard-and-np-complete/)\n- [Trying to understand P vs NP vs NP Complete vs NP Hard](https://softwareengineering.stackexchange.com/questions/308178/trying-to-understand-p-vs-np-vs-np-complete-vs-np-hard)\n- [Complexity: P, NP, NP-completeness, Reductions](https://www.youtube.com/watch?v=eHZifpgyH_4&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=22)\n- [Complexity: Approximation Algorithms](https://www.youtube.com/watch?v=MEz1J9wY2iM&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&index=24)\n- [Complexity: Fixed-Parameter Algorithms](https://www.youtube.com/watch?v=4q-jmGrmxKs&index=25&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n- [Lecture 23: Computational Complexity](https://www.youtube.com/watch?v=moPtwq_cVH8&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=24)\n- [Greedy Algs. II & Intro to NP Completeness](https://youtu.be/qcGnJ47Smlo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&t=2939)\n- [NP Completeness II & Reductions](https://www.youtube.com/watch?v=e0tGC6ZQdQE&index=16&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n- [NP Completeness III](https://www.youtube.com/watch?v=fCX1BGT3wjE&index=17&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm)\n- [NP Completeness IV](https://www.youtube.com/watch?v=NKLDp3Rch3M&list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&index=18)\n- [CSE373 2020 - Lecture 23 - NP-Completeness](https://www.youtube.com/watch?v=ItHp5laE1VE&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=23)\n- [CSE373 2020 - Lecture 24 - Satisfiability](https://www.youtube.com/watch?v=inaFJeCzGxU&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=24)\n- [CSE373 2020 - Lecture 25 - More NP-Completeness](https://www.youtube.com/watch?v=B-bhKxjZLlc&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=25)\n- [CSE373 2020 - Lecture 26 - NP-Completeness Challenge](https://www.youtube.com/watch?v=_EzetTkG_Cc&list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx&index=26)","x":-109,"y":1530,"width":454,"height":396},
		{"id":"5d2ffb17fd1ece04","type":"text","text":"# Basic Math Skills\n\nMath is a fundamental skill for computer science.\n\nVisit the following resources to learn more:\n\n- [Lec 1 | MIT 6.042J Mathematics for Computer Science, Fall 2010](https://www.youtube.com/watch?v=L3LMbpZIKhQ&list=PLB7540DEDD482705B)\n- [Integer Arithmetic, Karatsuba Multiplication](https://www.youtube.com/watch?v=eCaXlAaN2uE&index=11&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb)\n- [The Chinese Remainder Theorem (used in cryptography)](https://www.youtube.com/watch?v=ru7mWZJlRQg)\n- [Computer Science 70, 001 - Spring 2015 - Discrete Mathematics and Probability Theory](http://www.infocobuild.com/education/audio-video-courses/computer-science/cs70-spring2015-berkeley.html)\n- [Discrete Mathematics by Shai Simonson (19 videos)](https://www.youtube.com/playlist?list=PLWX710qNZo_sNlSWRMVIh6kfTjolNaZ8t)\n- [Discrete Mathematics By IIT Ropar NPTEL](https://nptel.ac.in/courses/106/106/106106183/)\n- [MIT 6.042J - Probability Introduction](https://www.youtube.com/watch?v=SmFwFdESMHI&index=18&list=PLB7540DEDD482705B)\n- [MIT 6.042J - Conditional Probability](https://www.youtube.com/watch?v=E6FbvM-FGZ8&index=19&list=PLB7540DEDD482705B)\n- [MIT 6.042J - Independence](https://www.youtube.com/watch?v=l1BCv3qqW4A&index=20&list=PLB7540DEDD482705B)\n- [MIT 6.042J - Random Variables](https://www.youtube.com/watch?v=MOfhhFaQdjw&list=PLB7540DEDD482705B&index=21)\n- [MIT 6.042J - Expectation I](https://www.youtube.com/watch?v=gGlMSe7uEkA&index=22&list=PLB7540DEDD482705B)\n- [MIT 6.042J - Expectation II](https://www.youtube.com/watch?v=oI9fMUqgfxY&index=23&list=PLB7540DEDD482705B)\n- [MIT 6.042J - Large Deviations](https://www.youtube.com/watch?v=q4mwO2qS2z4&index=24&list=PLB7540DEDD482705B)\n- [MIT 6.042J - Random Walks](https://www.youtube.com/watch?v=56iFMY8QW2k&list=PLB7540DEDD482705B&index=25)","x":467,"y":1530,"width":301,"height":200},
		{"id":"d2eaa465f692e1dc","type":"text","text":"Architectural Pattherns","x":72,"y":1133,"width":235,"height":60},
		{"id":"6b06607ee8910ee3","type":"text","text":"# [UML](../uml.md)\n\nUML is a standard way of visualizing a software system. It is a general-purpose, developmental, modeling language in the field of software engineering that is intended to provide a standard way to visualize the design of a system.\n\nVisit the following resources to learn more:\n\n- [UML Diagrams Full Course (Unified Modeling Language)](https://www.youtube.com/watch?v=WnMQ8HlmeXc)","x":885,"y":1163,"width":485,"height":257},
		{"id":"9e4246c5622504b1","type":"text","text":"GoF","x":213,"y":1050,"width":94,"height":60},
		{"id":"efd7c96d1f53f1fc","type":"text","text":"# Balanced Search Trees\n\nBalanced search trees are a type of data structure that allow for fast insertion, deletion, and lookup of data. They are a type of self-balancing binary search tree, which means that they are a binary tree that maintains the binary search tree property while also keeping the tree balanced. This means that the tree is always approximately balanced, which allows for fast insertion, deletion, and lookup of data.\n\nVisit the following resources to learn more:\n\n- [Self-balancing binary search tree - Wikipedia](https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree)\n- [Balanced Search Trees Operations and Applications 11 min](https://www.youtube.com/watch?v=IbNZ-x1I2IM)\n- [Balanced binary search tree rotations](https://www.youtube.com/watch?v=q4fnJZr8ztY)","x":-1073,"y":877,"width":785,"height":256},
		{"id":"4761c0d08f64e006","type":"text","text":"# Tries\n\nTries are a data structure that can be used to store strings. The idea is to store the characters of the string in a tree-like structure, where each node of the tree represents a single character. We can use this structure to store strings in a way that allows us to quickly search for strings with a common prefix.\n\nVisit the following resources to learn more:\n\n- [Tries - DataStructure Notes](http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Tries)\n- [The Trie: A Neglected Data Structure](https://www.toptal.com/java/the-trie-a-neglected-data-structure)\n- [TopCoder - Using Tries](https://www.topcoder.com/thrive/articles/Using%20Tries)\n- [Stanford Lecture (real world use case)](https://www.youtube.com/watch?v=TJ8SkcUSdbU)\n- [MIT, Advanced Data Structures, Strings (can get pretty obscure about halfway through)](https://www.youtube.com/watch?v=NinWEPPrkDQ&index=16&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf)\n- [0. Tries - Coursera](https://www.coursera.org/learn/algorithms-part2/home/week/4)\n- [1. R Way Tries](https://www.coursera.org/learn/algorithms-part2/lecture/CPVdr/r-way-tries)\n- [2. Ternary Search Tries](https://www.coursera.org/learn/algorithms-part2/lecture/yQM8K/ternary-search-tries)\n- [3. Character Based Operations](https://www.coursera.org/learn/algorithms-part2/lecture/jwNmV/character-based-operations)","x":-498,"y":1232,"width":250,"height":514},
		{"id":"de2426b64d56ee3b","type":"text","text":"# System Design\n\nSystem design is the process of defining the architecture, modules, interfaces, and data for a system to satisfy specified requirements. It is a very broad topic, and there are many ways to approach it.\n\nVisit the following resources to learn more:\n\n- [System Design Primer](https://github.com/donnemartin/system-design-primer)\n- [System Design: The complete course](https://dev.to/karanpratapsingh/system-design-the-complete-course-10fo)\n- [System Design 101](https://www.youtube.com/watch?v=Y-Gl4HEyeUQ)\n- [Scaling the Unscalable](https://www.youtube.com/watch?v=a2rcgzludDU)\n- [System design interview: Scale to 1 million users](https://www.youtube.com/watch?v=YkGHxOg9d3M)","x":-953,"y":1463,"width":375,"height":284},
		{"id":"df4b09deebd61729","type":"text","text":"# Databases\n\nA database is a collection of useful data of one or more related organizations structured in a way to make data an asset to the organization. A database management system is a software designed to assist in maintaining and extracting large collections of data in a timely fashion.\n\nVisit the following resources to learn more:\n\n- [Oracle: What is a Database?](https://www.oracle.com/database/what-is-database/)\n- [Prisma.io: What are Databases?](https://www.prisma.io/dataguide/intro/what-are-databases)\n- [DBMS by Stanford](https://www.youtube.com/watch?v=D-k-h0GuFmE&list=PL9ysvtVnryGpnIj9rcIqNDxakUn6v72Hm)","x":-925,"y":1900,"width":489,"height":280},
		{"id":"c4a55a8d4dee7944","type":"text","text":"# Networking\n\nNetworking is the process of connecting two or more computing devices together for the purpose of sharing data. In a data network, shared data may be as simple as a printer or as complex as a global financial transaction.\n\nIf you have networking experience or want to be a reliability engineer or operations engineer, expect questions from these topics. Otherwise, this is just good to know.\n\nVisit the following resources to learn more:\n\n- [Computer Networking Course - Network Engineering](https://www.youtube.com/watch?v=qiQR5rTSshw)\n- [Khan Academy - Networking](https://www.khanacademy.org/computing/code-org/computers-and-the-internet)\n- [Networking Video Series (21 videos)](https://www.youtube.com/playlist?list=PLEbnTDJUr_IegfoqO4iPnPYQui46QqT0j)","x":-288,"y":2010,"width":328,"height":530},
		{"id":"4f825e9fc980f5d2","type":"text","text":"# Security\n\nWeb security refers to the protective measures taken by the developers to protect the web applications from threats that could affect the business.\n\nVisit the following resources to learn more:\n\n- [MIT 6.858 Computer Systems Security, Fall 2014](https://www.youtube.com/playlist?list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh)\n- [Why HTTPS Matters](https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https)\n- [Wikipedia - OWASP](https://en.wikipedia.org/wiki/OWASP)\n- [OWASP Web Application Security Testing Checklist](https://github.com/0xRadi/OWASP-Web-Checklist)\n- [OWASP Top 10 Security Risks](https://sucuri.net/guides/owasp-top-10-security-vulnerabilities-2021/)\n- [OWASP Cheatsheets](https://cheatsheetseries.owasp.org/cheatsheets/AJAX_Security_Cheat_Sheet.html)\n- [Content Security Policy (CSP)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP)","x":187,"y":2010,"width":250,"height":330},
		{"id":"9f75394dc759964b","type":"text","text":"Security `RM`","x":236,"y":2400,"width":152,"height":60},
		{"id":"d42572e85a3980c2","type":"text","text":"![data_structure](../data_structure.md#definition) ","x":462,"y":-425,"width":620,"height":320},
		{"id":"f7470ad0960194af","type":"text","text":"# Processes and Threads\n\nProcesses and threads are the basic building blocks of a computer program. They are the smallest units of execution in a program. A process is an instance of a program that is being executed. A thread is a sequence of instructions within a process that can be executed independently of other code.\n\nVisit the following resources to learn more:\n\n- [Whats the difference between Process and a Thread?](https://www.quora.com/What-is-the-difference-between-a-process-and-a-thread)\n- [Operating Systems and System Programming](https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iBDyz-ba4yDskqMDY6A1w_c)","x":1030,"y":1840,"width":340,"height":420},
		{"id":"cd38aba2ea901040","type":"text","text":"# How Computers Work?\n\nComputers are everywhere. They are in our phones, our cars, our homes, and even in our pockets. But how do they actually work? How do they take in information, and how do they output information?\n\nVisit the following resources to learn more:\n\n- [How CPU executes a program](https://www.youtube.com/watch?v=XM4lGflQFvA)\n- [How computers calculate - ALU](https://youtu.be/1I5ZMmrOfnA)\n- [Registers and RAM](https://youtu.be/fpnE6UAfbtU)\n- [The Central Processing Unit (CPU)](https://youtu.be/FZGugFqdr60)\n- [Instructions and Programs](https://youtu.be/zltgXvg6r3k)","x":580,"y":1811,"width":320,"height":364},
		{"id":"ca97a9825f70126c","type":"text","text":"# K-D Trees\n\nK-D Trees are a data structure that allow for fast nearest neighbor search in high dimensional spaces. They are a generalization of binary search trees, and are used in a variety of applications, including computer vision and computational geometry.\n\nVisit the following resources to learn more:\n\n- [K-D Tree Algorithm](https://www.youtube.com/watch?v=Y4ZgLlDfKDg)\n- [K-d Trees - Computerphile](https://www.youtube.com/watch?v=BK5x7IUTIyU)","x":660,"y":2340,"width":392,"height":320},
		{"id":"18c623ae95aa3e97","type":"text","text":"# Skip Lists\n\nSkip lists are a data structure that allows you to perform operations on a sorted list in O(log n) time. Skip lists are a probabilistic data structure, which means that the probability of a certain operation taking a certain amount of time is a certain value. In the case of skip lists, the probability of an operation taking O(log n) time is 1.\n\nVisit the following resources to learn more:\n\n- [Randomization: Skip Lists](https://www.youtube.com/watch?v=2g9OSRKJuzM&index=10&list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp)\n- [Skip Lists - Wikipedia](https://en.wikipedia.org/wiki/Skip_list)","x":115,"y":2540,"width":395,"height":340},
		{"id":"5052578ff86d2ad9","type":"text","text":"# Common Algorithms\n\n- Sorting\n- Recursion\n- Searching\n- Cache Algorithms\n- Tree Algorithms\n- Graph Algorithms\n- Greedy Algorithms\n- Backtracking\n- Substring Search\n- Suffix Arrays\n- Dynamic Programming","x":190,"y":60,"width":221,"height":480},
		{"id":"8685f14d973ad242","x":-349,"y":-940,"width":380,"height":400,"type":"text","text":"# GIT\n\n- [Git Guides](https://github.com/git-guides)\n- Basic Comands\n\t- init\n\t- add\n\t- commit\n\t- push\n\t- pull\n\n## More\n\n- what is a DAG - [Directed acyclic graph](https://en.wikipedia.org/wiki/Directed_acyclic_graph)\n- what are branches and how to switch from one to another\n- what are cherry picks\n- how to rewrite commits\n- the differences between rebase and merge\n- what is stage\n- what is commit squash for?\n- what is bysect for?\n- what is reflog for?\n- differences between reset and clean"}
	],
	"edges":[
		{"id":"34e03dfaf8411d57","fromNode":"bfe7490e4e82751e","fromSide":"bottom","toNode":"b8c7c8c19974227b","toSide":"top","color":"1"},
		{"id":"45d32d9dc074dba8","fromNode":"b8c7c8c19974227b","fromSide":"bottom","toNode":"716b5b81fc549031","toSide":"top","color":"1"},
		{"id":"b6bab314ad8f928c","fromNode":"716b5b81fc549031","fromSide":"bottom","toNode":"5052578ff86d2ad9","toSide":"top","color":"1"},
		{"id":"7c39f3f9353c7e0c","fromNode":"5052578ff86d2ad9","fromSide":"left","toNode":"0b8b4b096b0084b5","toSide":"right","color":"1"},
		{"id":"6eb8e2b350c31ac4","fromNode":"0b8b4b096b0084b5","fromSide":"bottom","toNode":"11f354500e5d9a51","toSide":"top","color":"1"},
		{"id":"1020da2367ba0f2a","fromNode":"55fcdf246031175d","fromSide":"bottom","toNode":"6b06607ee8910ee3","toSide":"top","color":"1"},
		{"id":"b79ad42b5d49ac5f","fromNode":"6b06607ee8910ee3","fromSide":"left","toNode":"23065f2d862b132e","toSide":"right","color":"1"},
		{"id":"75c045382cc9d500","fromNode":"23065f2d862b132e","fromSide":"bottom","toNode":"5d2ffb17fd1ece04","toSide":"top","color":"1"},
		{"id":"d20a7b81cb52c920","fromNode":"5d2ffb17fd1ece04","fromSide":"left","toNode":"f245673e86be8b48","toSide":"right","color":"1"},
		{"id":"a59575e87311d56f","fromNode":"bfe7490e4e82751e","fromSide":"left","toNode":"6119eaee192cfd61","toSide":"right"},
		{"id":"31dd9c11f2c8665f","fromNode":"bfe7490e4e82751e","fromSide":"left","toNode":"e3cd6f396f2cd091","toSide":"right"},
		{"id":"f2de82ca1d8de6f4","fromNode":"f245673e86be8b48","fromSide":"left","toNode":"4761c0d08f64e006","toSide":"right","color":"1"},
		{"id":"ae00004c6e5dc6c9","fromNode":"4761c0d08f64e006","fromSide":"left","toNode":"de2426b64d56ee3b","toSide":"right","color":"1"},
		{"id":"354f5055de7dcbc7","fromNode":"de2426b64d56ee3b","fromSide":"bottom","toNode":"df4b09deebd61729","toSide":"top","color":"1"},
		{"id":"009f1f1fa2457381","fromNode":"df4b09deebd61729","fromSide":"right","toNode":"c4a55a8d4dee7944","toSide":"left","color":"1"},
		{"id":"106ba9b73d8d774d","fromNode":"c4a55a8d4dee7944","fromSide":"right","toNode":"4f825e9fc980f5d2","toSide":"left","color":"1"},
		{"id":"8be874d00bb7db4f","fromNode":"4f825e9fc980f5d2","fromSide":"right","toNode":"cd38aba2ea901040","toSide":"left","color":"1"},
		{"id":"e9f4a03211457db7","fromNode":"cd38aba2ea901040","fromSide":"right","toNode":"f7470ad0960194af","toSide":"left","color":"1"},
		{"id":"f4264f9bfa8d4221","fromNode":"f7470ad0960194af","fromSide":"bottom","toNode":"ca97a9825f70126c","toSide":"right","color":"1"},
		{"id":"1e78d946c366dd81","fromNode":"ca97a9825f70126c","fromSide":"left","toNode":"18c623ae95aa3e97","toSide":"right","color":"1"},
		{"id":"b111ad039e950219","fromNode":"4f825e9fc980f5d2","fromSide":"bottom","toNode":"9f75394dc759964b","toSide":"top"},
		{"id":"414f077c838c71ea","fromNode":"b8c7c8c19974227b","fromSide":"right","toNode":"d42572e85a3980c2","toSide":"left"},
		{"id":"7dabd25478917d9d","fromNode":"716b5b81fc549031","fromSide":"left","toNode":"cb2d4d6d4d34ebc0","toSide":"right"},
		{"id":"172c0f94e3ea2625","fromNode":"5052578ff86d2ad9","fromSide":"right","toNode":"cd6268d45fca94a3","toSide":"left"},
		{"id":"cbd31d4296f8f546","fromNode":"5052578ff86d2ad9","fromSide":"right","toNode":"256fdfd7a659e1e9","toSide":"left"},
		{"id":"211d58ea67ec5831","fromNode":"5052578ff86d2ad9","fromSide":"right","toNode":"27cbd4fd37c229c6","toSide":"left"},
		{"id":"80c569244319b462","fromNode":"5052578ff86d2ad9","fromSide":"right","toNode":"aa29e2c3936686b9","toSide":"left"},
		{"id":"2a59725bd81027b1","fromNode":"5052578ff86d2ad9","fromSide":"right","toNode":"3377e4ce3c33e583","toSide":"left"},
		{"id":"1f2d1e5bde030601","fromNode":"11f354500e5d9a51","fromSide":"right","toNode":"1adc1d59f291b5af","toSide":"left","color":"1"},
		{"id":"299a82e9b083bd02","fromNode":"1adc1d59f291b5af","fromSide":"right","toNode":"94fac9c144763812","toSide":"left","color":"1"},
		{"id":"001fcc91014d078c","fromNode":"94fac9c144763812","fromSide":"right","toNode":"55fcdf246031175d","toSide":"left","color":"1"},
		{"id":"31f32833f0539611","fromNode":"23065f2d862b132e","fromSide":"left","toNode":"9e4246c5622504b1","toSide":"right"},
		{"id":"928ece40c9e00298","fromNode":"23065f2d862b132e","fromSide":"left","toNode":"d2eaa465f692e1dc","toSide":"right"},
		{"id":"d36219e418581d42","fromNode":"23065f2d862b132e","fromSide":"left","toNode":"dcdc304de506ab12","toSide":"right"},
		{"id":"093b78953b6c8eba","fromNode":"23065f2d862b132e","fromSide":"left","toNode":"ceabea702b676fe5","toSide":"right"},
		{"id":"7da862fd8ba2ecaa","fromNode":"23065f2d862b132e","fromSide":"left","toNode":"fec47e33407a9b37","toSide":"right"},
		{"id":"a2a3ad430c62b403","fromNode":"4761c0d08f64e006","fromSide":"top","toNode":"efd7c96d1f53f1fc","toSide":"bottom"},
		{"id":"5ba0f0cc8843fb77","fromNode":"8685f14d973ad242","fromSide":"bottom","toNode":"bfe7490e4e82751e","toSide":"top","color":"1"}
	]
}